#!/bin/bash

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"

# source environment file if exists
if [[ -f "$SCRIPT_DIR/.env" ]]; then
  . "$SCRIPT_DIR/.env"
fi

REDREAM_DIR=${REDREAM_DIR:-$HOME/Applications/redream}

if uname | grep -q MSYS; then
  PLATFORM="windows"
  APP_PATH="redream"
  LINK_TARGET="..\.."
  REDREAM_ARCH="x86_64"
elif uname | grep -q Darwin; then
  PLATFORM="mac"
  APP_PATH="redream.app/Contents/MacOS/redream"
  LINK_TARGET="../../../../.."
  REDREAM_ARCH="x86_64"
else
  PLATFORM="linux"
  APP_PATH="redream"
  LINK_TARGET="../.."

  case "$(uname -m)" in #https://stackoverflow.com/questions/45125516/possible-values-for-uname-m
    "x86_64" )
      REDREAM_ARCH="x86_64"
      ;;
    "aarch64" | "aarch64_be" | "armv8l" )
      REDREAM_ARCH="universal-raspberry"
      REDREAM_ARM_TYPE="aarch64"
      REDREAM_ARM_MESA_DIR="aarch64-linux-gnu"
      ;;
    "arm" | "armv7l" )
      REDREAM_ARCH="universal-raspberry"
      REDREAM_ARM_TYPE="aarch32"
      REDREAM_ARM_MESA_DIR="arm-linux-gnueabihf"
      ;;
    *)
      echo "ERROR not running on a supported architecture"
      exit 1
    ;;
  esac
fi

get_latest_url() {
  local REDREAM_BASE_URL="https://redream.io"

  curl -Sso /tmp/redream-download.html "$REDREAM_BASE_URL/download"

  local links=$(
    grep -E 'href="([^"]*redream.'$REDREAM_ARCH'-'$PLATFORM'[^"]+)' /tmp/redream-download.html |
      sed -E 's/.*href="([^"]*redream.'$REDREAM_ARCH'-'$PLATFORM'[^"]+)".*/\1/g' |
      uniq
  )

  rm /tmp/redream-download.html

  local latest=$(echo "$links" | sort -rV | head -n1)
  echo "${REDREAM_BASE_URL}${latest}"
}

download() {
  echo -n "Downloading $1 ... "
  if [[ -f "$2" ]]; then
    echo "SKIP"
  else
    mkdir -p "$(dirname "$2")"
    if curl -Sso "$2" "$1"; then
      echo "OK"
    else
      rm -f "$2"
      echo "ERROR"
    fi
  fi
}

extract() {
  echo -n "Extracting $1 ... "
  if [[ -d "$2" ]]; then
    echo "SKIP"
  else
    mkdir -p "$2"
    if [[ "$PLATFORM" == "windows" ]]; then
      if unzip -q "$1" -d "$2"; then
        echo "OK"
      else
        rmdir "$2"
        echo "ERROR"
      fi
    else
      if tar xf "$1" -C "$2"; then
        echo "OK"
      else
        rmdir "$2"
        echo "ERROR"
      fi
    fi
  fi
}

cpio_hardlink() {
  echo -n "Creating hardlink to $2 ... "

  cd "$1/$(dirname "$APP_PATH")"

  if [[ -f "$REDREAM_DIR/$1" ]]; then
    local src_inode=$(stat -c '%d:%i' "$2")
    local rel_inode=$(stat -c '%d:%i' "$REDREAM_DIR/$2")

    if [[ "$src_inode" == "$rel_inode" ]]; then
      echo "SKIP"
    else
      rm -f "$REDREAM_DIR/$2"
    fi
  fi

  if [[ ! -f "$REDREAM_DIR/$2" ]]; then
    if echo "$2" | cpio -p -al "$LINK_TARGET" 2>/dev/null; then
      echo "OK"
    else
      echo "ERROR -> using copy"
      cp "$2" "$REDREAM_DIR/$2"
    fi
  fi

  cd - >/dev/null
}

link_release() {
  if [[ "$PLATFORM" == "windows" ]]; then
    echo -n "Creating hardlink to redream.exe ... "

    cd "$1/$(dirname "$APP_PATH")"

    if [[ -f "$REDREAM_DIR/redream.exe" ]]; then
      rm -f "$REDREAM_DIR/redream.exe"
    fi

    if cmd.exe /c "mklink /h "'"'$LINK_TARGET\\redream.exe'"'" redream.exe" >/dev/null; then
      echo "OK"
    else
      echo "ERROR -> using copy"
      cp "redream.exe" "$REDREAM_DIR/redream.exe"
    fi

    cd - >/dev/null
  else
    if [[ "$REDREAM_ARCH" == "universal-raspberry" ]]; then
      cpio_hardlink "$1" "redream.$REDREAM_ARM_TYPE.elf"
      cd "$REDREAM_DIR"
      [[ ! -f "redream" ]] || rm -f "redream"
      if [[ " $@ " == *" --system-mesa "* ]]; then
        echo "Using system mesa"
        ln -s "redream.$REDREAM_ARM_TYPE.elf" "redream"
      else
        echo "Using bundled mesa"
        local release
        release=$(echo "$1" | sed -E "s:^$REDREAM_DIR/::")
        cat <<EOF >redream
#!/usr/bin/env bash
cd "\$(cd "\$(dirname "\${BASH_SOURCE[0]}")" && pwd -P)"
LIBGL_DRIVERS_PATH="$release/mesa/$REDREAM_ARM_MESA_DIR/dri" "./redream.$REDREAM_ARM_TYPE.elf" "\$@"
EOF
        chmod +x redream
      fi
      cd - >/dev/null
    else
      cpio_hardlink "$1" "redream"
    fi
  fi
}

create_macos_application() {
  echo -n "Creating macOS redream.app in ~/Applications ... "
  if [[ -d ~/Applications/redream.app ]]; then
    echo "SKIP"
    return
  fi
  mkdir -p ~/Applications/redream.app/Contents/{MacOS,Resources}
  echo -e '#!/bin/sh\nexec "'"$REDREAM_DIR"'/redream" "$@"' >~/Applications/redream.app/Contents/MacOS/redream
  chmod +x ~/Applications/redream.app/Contents/MacOS/redream
  chmod +x ~/Applications/redream.app
  cp "$1/redream.app/Contents/Resources/icon.icns" ~/Applications/redream.app/Contents/Resources
  cp "$1/redream.app/Contents/Info.plist" ~/Applications/redream.app/Contents
  echo "OK"
}

create_linux_desktop_launcher() {
  local shortcut_text
  local env
  if [[ "$(uname -r)" == *valve* ]]; then
    env="MESA_LOADER_DRIVER_OVERRIDE=zink"
  fi
  shortcut_text=$(cat <<EOF
[Desktop Entry]
Version=1.0
Type=Application
Name=redream
Icon=$REDREAM_DIR/redream.png
Exec=${env:+"/usr/bin/env $env "}$REDREAM_DIR/redream %f
Categories=Game;Emulator;
Terminal=false
EOF
)
  echo -n "Creating linux redream.desktop in ~/.local/share/applications/redream.desktop ... "
  if [[ -f ~/.local/share/applications/redream.desktop ]] \
      && [[ "$shortcut_text" == "$(cat ~/.local/share/applications/redream.desktop)" ]] \
  ; then
    echo "SKIP -> EXISTS"
    return
  fi
  if [[ ! -d ~/.local/share/applications ]]; then
    echo "ERR -> DIR NOT FOUND ~/.local/share/applications"
    return
  fi
  wget -qO "$REDREAM_DIR/redream.png" https://raw.githubusercontent.com/andrewmackrodt/redream-launcher/master/redream.png
  echo "$shortcut_text" >~/.local/share/applications/redream.desktop
  echo "OK"
}

update() {
  local latest_url
  local download_path
  local release_path

  # get the latest release
  latest_url=$(get_latest_url)
  download_path="$REDREAM_DIR/releases/$(basename "$latest_url")"
  release_path="$REDREAM_DIR/releases/$(basename "$latest_url" | sed -E 's/.+-(v.+)\.(tar\.gz|zip)/\1/')"

  # download and extract
  download "$latest_url" "$download_path"
  extract "$download_path" "$release_path"

  # check for existence of redream binary
  if [[ ! -f "$release_path/$APP_PATH" ]]; then
    echo "ERROR could not locate redream executable in release"
    exit 1
  fi

  # create a hardlink to the latest release
  link_release "$release_path"

  if [[ "$PLATFORM" == "mac" ]]; then
    create_macos_application "$release_path"
  elif [[ "$PLATFORM" == "linux" ]]; then
    create_linux_desktop_launcher
  fi
}

if [[ ! -t 0 ]] || [[ " $@ " == *" -u "* ]] || [[ " $@ " == *" --update "* ]]; then
  update
fi

if [[ -t 0 ]] && [[ " $@ " != *" -N "* ]] && [[ " $@ " != *" --no-run "* ]]; then
  exec "$REDREAM_DIR/redream" "$@"
fi
